import matplotlib.pyplot as plt
from collections import Counter
import re

def read_file(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        return file.read()

#preprocess and count frequencies
def count_word_frequencies(text):
    #convert to lower and use regex expression
    words = re.findall(r'\b\w+\b', text.lower())
    print(words)
    return Counter(words)

#Zipf's law function
def plot_zipf(word_counts):
    #sort by frequency, get ranks
    sorted_counts = word_counts.most_common()
    ranks = range(1, len(sorted_counts) + 1)
    frequencies = [count for word, count in sorted_counts]
    
    #create plots
    plt.figure(figsize=(10, 6))
    plt.loglog(ranks, frequencies, marker='o')
    plt.title("Zipf's Law results")
    plt.xlabel("Word Rank")
    plt.ylabel("Word Frequency")
    plt.grid(True)
    
    top_words = [word for word, _ in sorted_counts[:30]]
    top_ranks = list(range(1, len(top_words) + 1))
    
    step_size = max(1, len(top_ranks) // 10)  # adjust according to preference or needs
    plt.xticks(top_ranks[::step_size], top_words[::step_size], rotation=45, ha='right')
          
    plt.show()
    
if __name__ == "__main__":
    file_path = 'sample.txt'
    text = read_file(file_path)
    word_counts = count_word_frequencies(text)
    plot_zipf(word_counts)
